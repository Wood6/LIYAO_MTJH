
main.out:     file format elf32-i386


Disassembly of section .init:

080482d4 <_init>:
 80482d4:	53                   	push   %ebx
 80482d5:	83 ec 08             	sub    $0x8,%esp
 80482d8:	e8 53 01 00 00       	call   8048430 <__x86.get_pc_thunk.bx>
 80482dd:	81 c3 23 1d 00 00    	add    $0x1d23,%ebx
 80482e3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482e9:	85 c0                	test   %eax,%eax
 80482eb:	74 05                	je     80482f2 <_init+0x1e>
 80482ed:	e8 3e 00 00 00       	call   8048330 <__gmon_start__@plt>
 80482f2:	83 c4 08             	add    $0x8,%esp
 80482f5:	5b                   	pop    %ebx
 80482f6:	c3                   	ret    

Disassembly of section .plt:

08048300 <printf@plt-0x10>:
 8048300:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048306:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804830c:	00 00                	add    %al,(%eax)
	...

08048310 <printf@plt>:
 8048310:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048316:	68 00 00 00 00       	push   $0x0
 804831b:	e9 e0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048320 <puts@plt>:
 8048320:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048326:	68 08 00 00 00       	push   $0x8
 804832b:	e9 d0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048330 <__gmon_start__@plt>:
 8048330:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048336:	68 10 00 00 00       	push   $0x10
 804833b:	e9 c0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048340 <__libc_start_main@plt>:
 8048340:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048346:	68 18 00 00 00       	push   $0x18
 804834b:	e9 b0 ff ff ff       	jmp    8048300 <_init+0x2c>

Disassembly of section .text:

08048400 <_start>:
 8048400:	31 ed                	xor    %ebp,%ebp
 8048402:	5e                   	pop    %esi
 8048403:	89 e1                	mov    %esp,%ecx
 8048405:	83 e4 f0             	and    $0xfffffff0,%esp
 8048408:	50                   	push   %eax
 8048409:	54                   	push   %esp
 804840a:	52                   	push   %edx
 804840b:	68 70 86 04 08       	push   $0x8048670
 8048410:	68 00 86 04 08       	push   $0x8048600
 8048415:	51                   	push   %ecx
 8048416:	56                   	push   %esi
 8048417:	68 fd 84 04 08       	push   $0x80484fd
 804841c:	e8 1f ff ff ff       	call   8048340 <__libc_start_main@plt>
 8048421:	f4                   	hlt    
 8048422:	66 90                	xchg   %ax,%ax
 8048424:	66 90                	xchg   %ax,%ax
 8048426:	66 90                	xchg   %ax,%ax
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <__x86.get_pc_thunk.bx>:
 8048430:	8b 1c 24             	mov    (%esp),%ebx
 8048433:	c3                   	ret    
 8048434:	66 90                	xchg   %ax,%ax
 8048436:	66 90                	xchg   %ax,%ax
 8048438:	66 90                	xchg   %ax,%ax
 804843a:	66 90                	xchg   %ax,%ax
 804843c:	66 90                	xchg   %ax,%ax
 804843e:	66 90                	xchg   %ax,%ax

08048440 <deregister_tm_clones>:
 8048440:	b8 0f a8 04 08       	mov    $0x804a80f,%eax
 8048445:	2d 0c a8 04 08       	sub    $0x804a80c,%eax
 804844a:	83 f8 06             	cmp    $0x6,%eax
 804844d:	77 01                	ja     8048450 <deregister_tm_clones+0x10>
 804844f:	c3                   	ret    
 8048450:	b8 00 00 00 00       	mov    $0x0,%eax
 8048455:	85 c0                	test   %eax,%eax
 8048457:	74 f6                	je     804844f <deregister_tm_clones+0xf>
 8048459:	55                   	push   %ebp
 804845a:	89 e5                	mov    %esp,%ebp
 804845c:	83 ec 18             	sub    $0x18,%esp
 804845f:	c7 04 24 0c a8 04 08 	movl   $0x804a80c,(%esp)
 8048466:	ff d0                	call   *%eax
 8048468:	c9                   	leave  
 8048469:	c3                   	ret    
 804846a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048470 <register_tm_clones>:
 8048470:	b8 0c a8 04 08       	mov    $0x804a80c,%eax
 8048475:	2d 0c a8 04 08       	sub    $0x804a80c,%eax
 804847a:	c1 f8 02             	sar    $0x2,%eax
 804847d:	89 c2                	mov    %eax,%edx
 804847f:	c1 ea 1f             	shr    $0x1f,%edx
 8048482:	01 d0                	add    %edx,%eax
 8048484:	d1 f8                	sar    %eax
 8048486:	75 01                	jne    8048489 <register_tm_clones+0x19>
 8048488:	c3                   	ret    
 8048489:	ba 00 00 00 00       	mov    $0x0,%edx
 804848e:	85 d2                	test   %edx,%edx
 8048490:	74 f6                	je     8048488 <register_tm_clones+0x18>
 8048492:	55                   	push   %ebp
 8048493:	89 e5                	mov    %esp,%ebp
 8048495:	83 ec 18             	sub    $0x18,%esp
 8048498:	89 44 24 04          	mov    %eax,0x4(%esp)
 804849c:	c7 04 24 0c a8 04 08 	movl   $0x804a80c,(%esp)
 80484a3:	ff d2                	call   *%edx
 80484a5:	c9                   	leave  
 80484a6:	c3                   	ret    
 80484a7:	89 f6                	mov    %esi,%esi
 80484a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484b0 <__do_global_dtors_aux>:
 80484b0:	80 3d 0c a8 04 08 00 	cmpb   $0x0,0x804a80c
 80484b7:	75 13                	jne    80484cc <__do_global_dtors_aux+0x1c>
 80484b9:	55                   	push   %ebp
 80484ba:	89 e5                	mov    %esp,%ebp
 80484bc:	83 ec 08             	sub    $0x8,%esp
 80484bf:	e8 7c ff ff ff       	call   8048440 <deregister_tm_clones>
 80484c4:	c6 05 0c a8 04 08 01 	movb   $0x1,0x804a80c
 80484cb:	c9                   	leave  
 80484cc:	f3 c3                	repz ret 
 80484ce:	66 90                	xchg   %ax,%ax

080484d0 <frame_dummy>:
 80484d0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484d5:	85 c0                	test   %eax,%eax
 80484d7:	74 1f                	je     80484f8 <frame_dummy+0x28>
 80484d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484de:	85 c0                	test   %eax,%eax
 80484e0:	74 16                	je     80484f8 <frame_dummy+0x28>
 80484e2:	55                   	push   %ebp
 80484e3:	89 e5                	mov    %esp,%ebp
 80484e5:	83 ec 18             	sub    $0x18,%esp
 80484e8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484ef:	ff d0                	call   *%eax
 80484f1:	c9                   	leave  
 80484f2:	e9 79 ff ff ff       	jmp    8048470 <register_tm_clones>
 80484f7:	90                   	nop
 80484f8:	e9 73 ff ff ff       	jmp    8048470 <register_tm_clones>

080484fd <main>:
int s2 = 2;
extern int S1;
extern int S2;

int main(int argc, char* argv[])
{
 80484fd:	55                   	push   %ebp
 80484fe:	89 e5                	mov    %esp,%ebp
 8048500:	83 e4 f0             	and    $0xfffffff0,%esp
 8048503:	83 ec 10             	sub    $0x10,%esp
	printf("&s1 = %p\n", &s1);
 8048506:	c7 44 24 04 10 a8 04 	movl   $0x804a810,0x4(%esp)
 804850d:	08 
 804850e:	c7 04 24 90 86 04 08 	movl   $0x8048690,(%esp)
 8048515:	e8 f6 fd ff ff       	call   8048310 <printf@plt>
	printf("&s1 = %p\n", &s2);
 804851a:	c7 44 24 04 08 a8 04 	movl   $0x804a808,0x4(%esp)
 8048521:	08 
 8048522:	c7 04 24 90 86 04 08 	movl   $0x8048690,(%esp)
 8048529:	e8 e2 fd ff ff       	call   8048310 <printf@plt>
	printf("&S1 = %p\n", &S1);
 804852e:	c7 44 24 04 00 a7 04 	movl   $0x804a700,0x4(%esp)
 8048535:	08 
 8048536:	c7 04 24 9a 86 04 08 	movl   $0x804869a,(%esp)
 804853d:	e8 ce fd ff ff       	call   8048310 <printf@plt>
	printf("&S2 = %p\n", &S2);
 8048542:	c7 44 24 04 04 a7 04 	movl   $0x804a704,0x4(%esp)
 8048549:	08 
 804854a:	c7 04 24 a4 86 04 08 	movl   $0x80486a4,(%esp)
 8048551:	e8 ba fd ff ff       	call   8048310 <printf@plt>
	
	printf("s1 = %d\n", s1);
 8048556:	a1 10 a8 04 08       	mov    0x804a810,%eax
 804855b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804855f:	c7 04 24 ae 86 04 08 	movl   $0x80486ae,(%esp)
 8048566:	e8 a5 fd ff ff       	call   8048310 <printf@plt>
	printf("s2 = %d\n", s2);
 804856b:	a1 08 a8 04 08       	mov    0x804a808,%eax
 8048570:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048574:	c7 04 24 b7 86 04 08 	movl   $0x80486b7,(%esp)
 804857b:	e8 90 fd ff ff       	call   8048310 <printf@plt>
	printf("S1 = %d\n", S1);
 8048580:	a1 00 a7 04 08       	mov    0x804a700,%eax
 8048585:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048589:	c7 04 24 c0 86 04 08 	movl   $0x80486c0,(%esp)
 8048590:	e8 7b fd ff ff       	call   8048310 <printf@plt>
	printf("S2 = %d\n", S2);
 8048595:	a1 04 a7 04 08       	mov    0x804a704,%eax
 804859a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804859e:	c7 04 24 c9 86 04 08 	movl   $0x80486c9,(%esp)
 80485a5:	e8 66 fd ff ff       	call   8048310 <printf@plt>
	
	S1 = 100;
 80485aa:	c7 05 00 a7 04 08 64 	movl   $0x64,0x804a700
 80485b1:	00 00 00 
	S2 = 200;
 80485b4:	c7 05 04 a7 04 08 c8 	movl   $0xc8,0x804a704
 80485bb:	00 00 00 
	
	printf("S1 = %d\n", S1);
 80485be:	a1 00 a7 04 08       	mov    0x804a700,%eax
 80485c3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485c7:	c7 04 24 c0 86 04 08 	movl   $0x80486c0,(%esp)
 80485ce:	e8 3d fd ff ff       	call   8048310 <printf@plt>
	printf("S2 = %d\n", S2);
 80485d3:	a1 04 a7 04 08       	mov    0x804a704,%eax
 80485d8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485dc:	c7 04 24 c9 86 04 08 	movl   $0x80486c9,(%esp)
 80485e3:	e8 28 fd ff ff       	call   8048310 <printf@plt>

	printf("liyao test!\n");
 80485e8:	c7 04 24 d2 86 04 08 	movl   $0x80486d2,(%esp)
 80485ef:	e8 2c fd ff ff       	call   8048320 <puts@plt>
	
	return 0;
 80485f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80485f9:	c9                   	leave  
 80485fa:	c3                   	ret    
 80485fb:	66 90                	xchg   %ax,%ax
 80485fd:	66 90                	xchg   %ax,%ax
 80485ff:	90                   	nop

08048600 <__libc_csu_init>:
 8048600:	55                   	push   %ebp
 8048601:	57                   	push   %edi
 8048602:	31 ff                	xor    %edi,%edi
 8048604:	56                   	push   %esi
 8048605:	53                   	push   %ebx
 8048606:	e8 25 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804860b:	81 c3 f5 19 00 00    	add    $0x19f5,%ebx
 8048611:	83 ec 1c             	sub    $0x1c,%esp
 8048614:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048618:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804861e:	e8 b1 fc ff ff       	call   80482d4 <_init>
 8048623:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048629:	29 c6                	sub    %eax,%esi
 804862b:	c1 fe 02             	sar    $0x2,%esi
 804862e:	85 f6                	test   %esi,%esi
 8048630:	74 27                	je     8048659 <__libc_csu_init+0x59>
 8048632:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048638:	8b 44 24 38          	mov    0x38(%esp),%eax
 804863c:	89 2c 24             	mov    %ebp,(%esp)
 804863f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048643:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048647:	89 44 24 04          	mov    %eax,0x4(%esp)
 804864b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048652:	83 c7 01             	add    $0x1,%edi
 8048655:	39 f7                	cmp    %esi,%edi
 8048657:	75 df                	jne    8048638 <__libc_csu_init+0x38>
 8048659:	83 c4 1c             	add    $0x1c,%esp
 804865c:	5b                   	pop    %ebx
 804865d:	5e                   	pop    %esi
 804865e:	5f                   	pop    %edi
 804865f:	5d                   	pop    %ebp
 8048660:	c3                   	ret    
 8048661:	eb 0d                	jmp    8048670 <__libc_csu_fini>
 8048663:	90                   	nop
 8048664:	90                   	nop
 8048665:	90                   	nop
 8048666:	90                   	nop
 8048667:	90                   	nop
 8048668:	90                   	nop
 8048669:	90                   	nop
 804866a:	90                   	nop
 804866b:	90                   	nop
 804866c:	90                   	nop
 804866d:	90                   	nop
 804866e:	90                   	nop
 804866f:	90                   	nop

08048670 <__libc_csu_fini>:
 8048670:	f3 c3                	repz ret 

Disassembly of section .fini:

08048674 <_fini>:
 8048674:	53                   	push   %ebx
 8048675:	83 ec 08             	sub    $0x8,%esp
 8048678:	e8 b3 fd ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804867d:	81 c3 83 19 00 00    	add    $0x1983,%ebx
 8048683:	83 c4 08             	add    $0x8,%esp
 8048686:	5b                   	pop    %ebx
 8048687:	c3                   	ret    
